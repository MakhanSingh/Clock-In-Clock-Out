jQuery(document).ready(function ($) {

    // Init
    InitSmoothScrollToAnchor();
    initBlogCTA();
    initUTMs();
    initPassUTMsToCalendy();
    initHSForms();
    // initCookiesPopup();
    initFixIframeVideoAspectRatio();
    initShareLinkPopups();
    initToolTips();
    initBILinkClickEvent();
    initUserLeftTitle();
    initLottieAnimations();
    initAnalyticsEvents();
    initDemoCta();
    initCallCta().catch(console.error);

    // Init Functions
    function InitSmoothScrollToAnchor() {
        const headerOffset = getComputedStyle(document.body).getPropertyValue('--header-height')
        const extraOffset = parseFloat(getComputedStyle(document.body).getPropertyValue('--sticky-height')) || 0
        $('a[href*="#"]:not([href="#"]):not([data-css-scroll])').click(function () {
            if (location.pathname.replace(/^\//, '') === this.pathname.replace(/^\//, '') && location.hostname === this.hostname) {
                var target = $(this.hash);
                target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');
                if (target.length) {
                    $('html,body').animate({
                        scrollTop: target.offset().top - headerOffset - extraOffset
                    }, 1000);
                    return false;
                }
            }
        });
    }

    function initBlogCTA() {
        if ($('.blog-ctaWithSlider__slider').length) {
            $('.blog-ctaWithSlider__slider').slick({
                infinite: true,
                slidesToShow: 1,
                slidesToScroll: 1,
                dots: false,
                arrows: true,
                fade: true,
                autoplay: false,
            });
        }
        $('.js-blog-ctaWithVideo-play').click(function () {
            $(this).siblings('img').addClass('hide-img');
            $(this).addClass('hide-img');
            var videoEl = $(this).siblings('.blog-ctaWithVideo__video');
            var videoElIframe = videoEl.find('iframe');
            videoElIframe.addClass('firameeee');
            videoEl.addClass('show-video');

            videoElIframe.attr('src', videoElIframe.attr('data-src'))
        });
    }

    function initUTMs() {

        window.Utms_Manager = {
            utms: [
                'utm_source',
                'utm_medium',
                'utm_campaign',
                'utm_term',
                'utm_content',
                'couponCode',
            ]
        };

        Utms_Manager.getUTMsFromStorage = function () {
          var utms_in_cookies = {};

          Utms_Manager.utms.forEach(utm => {
            const item = localStorage.getItem(utm)
            if (item) {
              utms_in_cookies[utm] = item
            }
          })

          return utms_in_cookies;
        }

        Utms_Manager.getUTMsFromCookies = function () {
            var utms_in_cookies = {};

            Utms_Manager.utms.forEach(function (utm_key) {
                var utm_val = Cookies.get(utm_key);
                if (utm_val) {
                    utms_in_cookies[utm_key] = utm_val;
                }
            });

            return utms_in_cookies;
        }

        Utms_Manager.ifUserCameWithUTMs = function () {
            var exists = false;
            // Save utms to cookies.
            Utms_Manager.utms.forEach(function (utm) {
                var url_param_value = getUrlParam(utm);
                if (url_param_value) {
                    exists = true;
                }
            });
            return exists;
        }

      Utms_Manager.initSaveUTMsToStorage = function () {
        const userCameWithUTMs = Utms_Manager.ifUserCameWithUTMs();

        Utms_Manager.utms.forEach(utm => {
          const url_param_value = getUrlParam(utm);

          if (url_param_value) {
            localStorage.setItem(utm, url_param_value);
          } else if (!url_param_value && userCameWithUTMs) {
            localStorage.removeItem(utm);
          }
        })
      }

        Utms_Manager.initSaveUTMsToCookies = function () {

            var UserCameWithUTMs = Utms_Manager.ifUserCameWithUTMs();

            // Save utms to cookies.
            Utms_Manager.utms.forEach(function (utm) {
                var url_param_value = getUrlParam(utm);
                if (url_param_value) {
                    Cookies.set(utm, url_param_value, {expires: 365, domain: window.location.host, path: '/'});
                } else if (!url_param_value && UserCameWithUTMs) {
                    Cookies.remove(utm, {domain: window.location.host, path: '/'});
                }
            });

        }

        Utms_Manager.populateUTMs = function () {

            var utms_in_cookies = Utms_Manager.getUTMsFromStorage();

            if (utms_in_cookies) {

                // Add UTMs to inputs
                for (var utm_key in utms_in_cookies) {
                    if (Object.prototype.hasOwnProperty.call(utms_in_cookies, utm_key)) {
                        var utm_val = utms_in_cookies[utm_key];
                        $('[name="' + utm_key + '"]').val(utm_val);
                    }
                }

                // Add UTMs to links
                $('.js-add-utms').each(function (item) {
                    var currentURL = $(this).attr('href');
                    var newURL = addParamsToUrl(currentURL, utms_in_cookies);
                    $(this).attr('href', newURL);
                });
            }

        }

        Utms_Manager.init = function () {
            Utms_Manager.initSaveUTMsToStorage();
            Utms_Manager.populateUTMs();
        }

        // init
        Utms_Manager.init();

    }

    function initPassUTMsToCalendy() {
        var utms_in_cookies = Utms_Manager.getUTMsFromStorage();
        $('a[href*="/calendly"]').each(function () {
            var currentURL = $(this).attr('href');
            var newURL = addParamsToUrl(currentURL, utms_in_cookies);
            $(this).attr('href', newURL);
        });
    }

    function initHSForms() {
        window.addEventListener('message', event => {
            if (event.data.type === 'hsFormCallback' && event.data.eventName === 'onFormReady') {
                $(document).trigger('hubspot_forms_loaded');
            }
            if (event.data.type === 'hsFormCallback' && event.data.eventName === 'onFormSubmit') {
                $(document).trigger('hubspot_form_submit', {
                    status: 'success',
                    formId: event.data.id,
                    formName: 'hubspot_form',
                    formData: event.data
                });
            }
        });

        $(document).on('hubspot_forms_loaded', function (e, eventInfo) {
            setTimeout(function () {
                addUTMsToHSForms();
            }, 500);
        });

        function addUTMsToHSForms() {
            tg.globals.utms.forEach(function (utm_key) {
                var utm_val = Cookies.get(utm_key);
                if (utm_val) {
                    $('[name="' + utm_key + '"]').val(utm_val);

                }
            });
        }
    }

    function initCookiesPopup() {
        var cookies_popup = $('.cookies-popup');

        var cookie_key = 'agree_to_use_cookies2';

        var cookie_val = getCookie(cookie_key);

        if ((!$('body').hasClass('rtl')) && (!cookie_val)) {
            cookies_popup.css("display", "flex");
            $('body').addClass('cookies-popup-is-open');
            setCookie(cookie_key, 'agree', 365);
        }

        // close popup on agree.
        $(document).on('click', '.cookies-popup__agree', function (e) {
            e.preventDefault();
            cookies_popup.slideUp();
            $('body').removeClass('cookies-popup-is-open');
        });


        // setCookie
        function setCookie(name, value, expiry_days) {
            var d = new Date();
            d.setTime(d.getTime() + (expiry_days * 24 * 60 * 60 * 1000));
            var expires = "expires=" + d.toUTCString();
            document.cookie = name + "=" + value + ";" + expires + ";path=/";
            return getCookie(name);
        };

        // getCookie
        function getCookie(name) {
            var cookie_name = name + "=";
            var decodedCookie = decodeURIComponent(document.cookie);
            var ca = decodedCookie.split(';');
            for (var i = 0; i < ca.length; i++) {
                var c = ca[i];
                while (c.charAt(0) == ' ') {
                    c = c.substring(1);
                }
                if (c.indexOf(cookie_name) === 0) {
                    return c.substring(cookie_name.length, c.length);
                }
            }
            return false;
        };
    }

    function initFixIframeVideoAspectRatio() {

        // Find all YouTube videos
        // Expand that selector for Vimeo and whatever else
        var $allVideos = $(".js-iframe-fix-aspectRatio iframe[src*='//www.youtube.com'], .js-iframe-fix-aspectRatio iframe[src*='//player.vimeo.com']"),

            // The element that is fluid width
            $fluidEl = $(".js-iframe-fix-aspectRatio");

        // Figure out and save aspect ratio for each video
        $allVideos.each(function () {


            $(this)
                .data('aspectRatio', this.height / this.width)

                // and remove the hard coded width/height
                .removeAttr('height')
                .removeAttr('width');

        });

        // When the window is resized
        $(window).resize(function () {

            var newWidth = $fluidEl.width();

            // Resize all videos according to their own aspect ratio
            $allVideos.each(function () {

                var $el = $(this);
                $el
                    .width(newWidth)
                    .height(newWidth * $el.data('aspectRatio'));

            });

            // Kick off one resize to fix all videos on page load
        }).resize();
    }

    function initShareLinkPopups() {
        const $popupLinks = document.querySelectorAll('[data-share-popup]')
        if (!$popupLinks) return

        function popupCenter(url) {
            const title = 'share'
            const w = 800
            const h = 600

            // Fixes dual-screen position                             Most browsers       Firefox
            const dualScreenLeft = window.screenLeft != undefined ? window.screenLeft : screen.left;
            const dualScreenTop = window.screenTop != undefined ? window.screenTop : screen.top;

            const width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : screen.width;
            const height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : screen.height;

            const left = ((width / 2) - (w / 2)) + dualScreenLeft;
            const top = ((height / 2) - (h / 2)) + dualScreenTop;
            const newWindow = window.open(url, title, `scrollbars=yes, width=${w}, height=${h}, top=${top}, left=${left}`);

            if (window.focus) {
                newWindow.focus();
            }
        }

        $popupLinks.forEach($link => {
            $link.addEventListener('click', event => {
                if (!$link.href) return
                event.preventDefault()
                popupCenter($link.href)
            })
        })
    }

    function initToolTips() {
        if (!window.tippy) return

        window.tippy('[data-tippy-content]', {
            theme: 'main',
            interactive: true,
            placement: 'top',
            hideOnClick: false,
            allowHTML: true,
        })
    }

    function initBILinkClickEvent() {
        function handler() {
            if (!window.cta) return

            const $element = $(this)
            const label = $element.text()
                .replace(/\n/gmi, '')
                .replace(/<svg>(.*)<\/svg>/gmi, '')
                .replace(/ +(?= )/gmi, '')
                .trim()
            const $section = $element.closest('section[class^=section], header[class^=section], footer[class^=section]')
            const sectionLoopIndex = $('.sections-loop').children('section').index($section)
            const extra = {
                element_type: $element[0].nodeName === 'A' ? 'link' : `button:${$element.data('bi-click')}`,
                link_label: label,
                link_href: $element.attr('href'),
                link_classname: $element.attr('class') || $element.closest('[class]').attr('class'),
                link_id: $element.attr('id'),
                section: $section && ($section.attr('class') || '').split(' ')[0],
                section_id: $section && $section.attr('id'),
                section_loop_index: sectionLoopIndex > -1 && sectionLoopIndex,
                clean_url: window.location.href.split('?')[0],
            }
            const data = {
                label: 'cta_button:clicked',
                feature: 'website',
                context: window.document.title,
                value: '',
                extra: extra,
            }
            window.cta.reportHit('actionHit', data)
        }

        $('a[href], [data-bi-click]').on('click', handler)
    }

    function initUserLeftTitle() {
        var initialTitle = $(document).attr('title');
        var titleShouldChange = false;

        if (!window.userLeftTitle || !window.userLeftTitle.length) {
            return;
        }

        setInterval(rotateTitle, 1200);

        $(window).blur(function (e) {
            titleShouldChange = true;
        });
        $(window).focus(function (e) {
            titleShouldChange = false;
            document.title = initialTitle;
        });
        function rotateTitle() {
            // console.log('rotating.....', titleShouldChange);
            if (!titleShouldChange) {
                return;
            }


            if (document.title === initialTitle) {
                document.title = window.userLeftTitle;
            } else {
                document.title = initialTitle;
            }
        }
    }

    function initLottieAnimations () {
      if (!window.lottie) return
      if (!'IntersectionObserver' in window) return

      /** @var {import('lottie-web').LottiePlayer} lottie */
      const lottie = window.lottie
      window.lottieAnimations = {}

      $('[data-lottie]').each(function () {
        const $container = $(this)
        const path = $container.attr('data-lottie')

        /** @type { 'auto' | 'visible' | 'click' } */
        const start = $container.attr('data-lottie-start')

        /** @type { 'loop' | 'iterations' } */
        const playbackMode = $container.attr('data-lottie-playback')

        /** @type { number } */
        const iterations = parseInt($container.attr('data-lottie-iterations') || 0)

        const loop = playbackMode === 'loop' ? true : Math.round(iterations) - 1 // not sure why decrement required

        const animation = lottie.loadAnimation({
          container: $container[0],
          renderer: /iPhone|iPad|iPod/.test(navigator.userAgent) ? 'canvas' : 'svg',
          loop: loop,
          autoplay: false,
          path: path,
          name: path,
        })

        window.lottieAnimations[path] = animation

        /** @type {[number, number] || [number, number][] || false} */
        let segments = false

        function playAnimation ({ alreadyStarted } = { alreadyStarted: false }) {
          if (segments) {
            if (!alreadyStarted) {
              animation.playSegments(segments, true)
            } else {
              animation.playSegments(segments[1])
            }
          } else {
            animation.play()
          }
        }

        animation.addEventListener('data_ready', function () {
          const markers = animation.animationData?.markers
          if (markers && markers[0] && markers[1] && markers[2]) {
            segments = [
              [markers[0].tm, markers[1].tm],
              [markers[1].tm, markers[2].tm],
            ]
          }

          if (start === 'visible') {
            const initObserver = new IntersectionObserver(([entry]) => {
              if (entry.isIntersecting) {
                playAnimation()
                initObserver.unobserve($container[0])
              }
            })
            initObserver.observe($container[0])
          } else if (start === 'click') {
            $container.one('click', function () {
              playAnimation()
              $container.one('mouseleave', function () {
                $container.attr('data-lottie-start', 'clicked')
              })
            })
          } else {
            playAnimation()
          }

          const playPauseObserver = new IntersectionObserver(([entry]) => {
            // don't playAnimation/pause if click still required
            if ($container.attr('data-lottie-start') === 'click') {
              return
            }

            if (entry.isIntersecting && animation.isPaused) {
              playAnimation({ alreadyStarted: true })
            }
            if (!entry.isIntersecting) {
              animation.pause()
            }
          })
          playPauseObserver.observe($container[0])
        })
      })
    }

    function initAnalyticsEvents () {
      window.dataLayer = window.dataLayer || []

      function sendDataLayerToBI () {
        let index = 0

        function update () {
          if (!window.cta) return

          const buffer = window.dataLayer.slice(index)
          index = window.dataLayer.length

          // normalize `Arguments` to object with array
          for (let event of buffer) {
            if (typeof event[0] !== 'undefined' && !Array.isArray(event[0])) {
              event = {
                event: 'arguments',
                value: Array.from(event)
              }
            }

            // replace gtm.element with tag name and classes to avoid circular reference error
            if (event['gtm.element']) {
              const tag = event['gtm.element'].tagName.toLowerCase()
              const classes = event['gtm.element'].classList.value
              event['gtm.element'] = tag + (classes ? '.' + classes.replaceAll(' ', '.') : '')
            }

            window.cta.reportHit('actionHit', {
              label: 'data_layer_event',
              value: '',
              extra: event
            }).catch(console.error)
          }
        }

        const dataLaterToBIInterval = setInterval(update, 1000)

        window.addEventListener('beforeunload', () => {
          clearInterval(dataLaterToBIInterval)
          update()
        })
      }

      function sendGTMEventsToBI () {
        if (!window.cta) return
        let sendGTMEventsToBIAttempt = 0

        function setup () {
          sendGTMEventsToBIAttempt++

          // wait for google_tag_manager.mb to be available
          if (!window.google_tag_manager || !window.google_tag_manager?.mb || !window.google_tag_manager?.mb?.listen) {
            if (sendGTMEventsToBIAttempt > 20) {
              console.error('google_tag_manager.mb not found')
              return
            }

            setTimeout(setup, 100)
            return
          }

          window.google_tag_manager.mb.listen(({ message }) => {
            const [, event, data] = message
            if (typeof event !== 'string' || typeof data !== 'object') {
              console.error('google_tag_manager.mb type error')
              return
            }

            window.cta.reportHit('actionHit', {
              label: 'data_layer_event',
              value: '',
              extra: {
                event,
                ...data,
              }
            }).catch(console.error)
          })
        }

        setup()
      }

      sendDataLayerToBI()
      sendGTMEventsToBI()

      /**
       * @param {string} name
       * @param {Record<string, string|number|boolean>} data
       */
      window.sendGAEvent = function (name, data = {}) {
        window.dataLayer.push({
          event: name,
          page_url: window.location.href,
          ...data,
        })
      }

      /**
       * @typedef {string | number} CalculatorValue
       */

      /**
       * Send GA event for calculator interaction
       *
       * @param {string} calculatorName
       * @param {string} type
       * @param {number} index
       * @param {string} key
       * @param {string} value
       * @param {string[]=} keys
       * @param {(CalculatorValue | CalculatorValue[])[]=} values
       * @param {(CalculatorValue | CalculatorValue[])[]=} results
       */
      window.calculatorSendAnalyticsEvent = function (calculatorName = '', { type, index, key, value }, {
        keys = [],
        values = [],
        results = []
      }) {
        const data = {
          button_type: type,
          question_number: index + 1,
          question_text: key,
        }

        const answersValues = values.map(value => Array.isArray(value) ? `'${value.join(';')}'` : value)
        data.answers_values = answersValues.join(',')

        const resultsValues = results.map(result => Array.isArray(result) ? `'${result.join(';')}'` : result)
        data.results_values = resultsValues.join(',')

        const keysValues = keys.map(key => Array.isArray(key) ? `'${key.join(';')}'` : key)
        data.keys_values = keysValues.join(',')

        window.sendGAEvent('calculator_interaction', data)

        if (window.cta) {
          window.cta.reportHit('actionHit', {
            label: 'calculator_interaction',
            value: '',
            extra: {
              name: calculatorName,
              element: {
                index,
                key,
                value,
              },
              state: {
                keys,
                values: values.map(result => Array.isArray(result) ? `${result.join(';')}` : result),
                results,
              },
              utm: Object.fromEntries(new URLSearchParams(window.location.search)),
            }
          }).catch(console.error)
        }
      }

      /**
       * @param {Record<string, string>} formObj
       * @param {string[]} fieldNames
       * @param {string|null} newlineReplacer
       * @return {string}
       */
      window.formValuesToCSV = function (formObj, fieldNames, { newlineReplacer = '§' } = {}) {
        const formEntries = Object.entries(formObj).filter(([name]) => fieldNames.includes(name))
        if (!formEntries.length) return ''

        const formEntriesCSVHeaderString = formEntries.map(([name]) => name).join(', ')
        const formEntriesCSVRowString = formEntries.map(([_, value]) => value).join(', ')
        return [formEntriesCSVHeaderString, formEntriesCSVRowString].join(newlineReplacer ?? '\r\n')
      }

      /**
       * @param {HTMLElement} $calculator
       * @param {number} timeout
       * @param {boolean} once
       */
      window.calculatorSendUserIdleEvent = function ($calculator, {
        timeout = 25_000,
        once = true,
      } = {}) {
        let timer
        const fn = () => {
          clearTimeout(timer)
          timer = setTimeout(() => {
            sendGAEvent('calculator_user_idle', {
              time_elapsed: window.performance.now().toFixed(0),
              timeout,
              fire_once: once,
            })

            if (once) {
              $calculator.removeEventListener('click', fn)
              $calculator.removeEventListener('touchend', fn)
            }
          }, timeout)
        }

        $calculator.addEventListener('click', fn)
        $calculator.addEventListener('touchend', fn)
        fn()
      }
    }

  function initDemoCta () {
    const ELIGIBLE_REFERRERS = [
      'ahrefs.com',
      'airiodion.com',
      'alternativeto.net',
      'app.connecteam.com',
      'askeverly.com',
      'au.search.yahoo.com',
      'baidu.com',
      'bing.com',
      'blog-weekdone-com.cdn.ampproject.org',
      'blog.proofhub.com',
      'blog.weekdone.com',
      'blogin.co',
      'buddypunch.com',
      'ca.search.yahoo.com',
      'calendly.com',
      'capterra.com',
      'cn.bing.com',
      'customerthink.com',
      'droplr.com',
      'duckduckgo.com',
      'engageme.online',
      'es.connecteam.com',
      'es.search.yahoo.com',
      'es.workaau.search.yahoo.com',
      'es.workmeter.com',
      'eshopdaily.com',
      'facebook.com',
      'fi.search.yahoo.com',
      'fitsmallbusiness.com',
      'fr.connecteam.com',
      'fr.search.yahoo.com',
      'goodfirms.co',
      'google.bs',
      'google.co.in',
      'google.co.tz',
      'google.co.uk',
      'google.com',
      'google.com.au',
      'google.com.bd',
      'google.com.do',
      'google.com.eg',
      'google.com.gt',
      'google.com.kh',
      'google.com.mm',
      'google.com.mt',
      'google.com.ng',
      'google.com.ni',
      'google.com.np',
      'google.com.tr',
      'google.com.ua',
      'google.dz',
      'google.lv',
      'google.mk',
      'google.sv',
      'gusto.com',
      'health.info.com',
      'hk.search.yahoo.com',
      'in.search.yahoo.com',
      'info.co.uk',
      'info.com',
      'info.com/serp',
      'instagram.com',
      'int.search.myway.com',
      'int.search.tb.ask.com',
      'investopedia.com',
      'keep.google.com',
      'l.facebook.com',
      'l.instagram.com',
      'l.workplace.com',
      'lavasoft.gosearchresults.com',
      'listolog.com',
      'lnkd.in',
      'lp.connecteam.com',
      'm.baidu.com',
      'm.vk.com',
      'm.youtube.com',
      'mail.google.com',
      'mail.uol.com.br',
      'malaysia.search.yahoo.com',
      'medicalsplan.com',
      'nortonsafe.search.ask.com',
      'omnihotline.my',
      'peoplemanagingpeople.com',
      'ph.search.yahoo.com',
      'pr.connecteam.com',
      'presearch.com',
      'promail.ptd.net',
      'r.search.yahoo.com',
      'saasradar.net',
      'search.alot.com',
      'search.aol.com',
      'search.brave.com',
      'search.yahoo.com',
      'shanebarker.com',
      'simplycodes.com',
      'smallbusiness.chron.com',
      'softwareadvice.com',
      'srch.co.il',
      'startpage.com',
      'teambuilding.com',
      'techcrunch.com',
      'tgdaily.com',
      'tiktok.com',
      'timeanalyticssoftware.com',
      'timecamp.com',
      'uk.search.yahoo.com',
      'us.search.yahoo.com',
      'weekdone.com',
      'whatfix.com',
      'workiz.com',
      'workstyle.io',
      'www.bing.com',
      'www.coverwallet.com',
      'www.ecosia.org',
      'www.fiverr.com',
      'www.fm2s.com.br',
      'www.g2.com',
      'www.google.ae',
      'www.google.as',
      'www.google.be',
      'www.google.ca',
      'www.google.ch',
      'www.google.cl',
      'www.google.co.cr',
      'www.google.co.id',
      'www.google.co.il',
      'www.google.co.in',
      'www.google.co.jp',
      'www.google.co.no',
      'www.google.co.nz',
      'www.google.co.th',
      'www.google.co.uk',
      'www.google.co.za',
      'www.google.com',
      'www.google.com.ar',
      'www.google.com.au',
      'www.google.com.bh',
      'www.google.com.br',
      'www.google.com.co',
      'www.google.com.hk',
      'www.google.com.jm',
      'www.google.com.kw',
      'www.google.com.mx',
      'www.google.com.my',
      'www.google.com.ph',
      'www.google.com.pk',
      'www.google.com.pr',
      'www.google.com.sa',
      'www.google.com.sg',
      'www.google.com.tw',
      'www.google.com.uy',
      'www.google.com.vn',
      'www.google.de',
      'www.google.dk',
      'www.google.es',
      'www.google.fi',
      'www.google.fr',
      'www.google.gr',
      'www.google.hu',
      'www.google.ie',
      'www.google.it',
      'www.google.lk',
      'www.google.lt',
      'www.google.lu',
      'www.google.me',
      'www.google.mu',
      'www.google.nl',
      'www.google.no',
      'www.google.pl',
      'www.google.pt',
      'www.google.ro',
      'www.google.ru',
      'www.google.se',
      'www.google.si',
      'www.google.sk',
      'www.izito.co.za',
      'www.linkedin.com',
      'www.offthestrip.com',
      'www.prnewswire.com',
      'www.proofhub.com',
      'www.quora.com',
      'www.reddit.com',
      'www.troopmessenger.com',
      'www.yandex.com',
      'www.youtube.com',
      'yandex.ru',
      'youtube.com',
      '100answers.com',
      'a.slashdotmedia.com',
      'adpmeet.webex.com',
      'app.asana.com',
      'app.clickup.com',
      'app.hubspot.com',
      'app.mural.co',
      'br.pinterest.com',
      'businesscom.go2cloud.org',
      'businesscom.hasoffers.com',
      'callhippo.com',
      'compare.tech.co',
      'compare.tech.co/b',
      'compare.tech.co/f',
      'crozdesk.com',
      'euc-onenote.officeapps.live.com',
      'financesonline.com',
      'fr.capterra.ca',
      'fr.getapp.ca',
      'id.pinterest.com',
      'technologyadvice.com',
      'pages.technologyadvice.com',
      'reviews.financesonline.com',
      'se.pinterest.com',
      'slashdot.org',
      'sourceforge.net',
      'statics.teams.cdn.office.net',
      'thedigitalprojectmanager.com',
      'traction.technologyadvice.com',
      'web.telegram.org',
      'worksuite.com',
      'www.begindot.com',
      'www.canva.com',
      'www.capterra.ca',
      'www.capterra.co.u',
      'www.capterra.com',
      'www.getapp.ca',
      'www.getapp.co.u',
      'www.getapp.com',
      'www.gstatic.com',
      'www.pinterest.ca',
      'www.pinterest.com',
      'www.repspark.com',
      'www.saasworthy.com',
      'www.securden.com',
      'www.softwareadvice.co.u',
      'www.softwareadvice.com',
      'www.softwaresuggest.com',
      'www.talentdesk.io',
      'www.techopedia.com',
      'www.techrepublic.com',
      'www.trustradius.com',
      'ntp.msn.com',
      'msn.com',
      'www.tiktok.com',
      'www.forbes.com',
      'qbo.intuit.com',
      'getapp.com',
      'g2.com',
    ]

    const BLOCKED_MEDIUMS = [
      'cpc',
    ]

    const BLOCKED_SOURCES = [
      'Bingpaid_brand',
      'google',
      'google_pmax',
      'google_brand',
      'Bingpaid',
      'google_il',
      'google_il_brand',
    ]

    const ELIGIBLE_COOKIE_NAME = 'demo_cta_eligible'
    const BLOCKED_COOKIE_NAME = 'demo_cta_blocked'

    // set cookies
    if (ELIGIBLE_REFERRERS.some(referrer => document.referrer.includes(referrer)) || !document.referrer) {
      document.cookie = ELIGIBLE_COOKIE_NAME + '=1; max-age=31536000; path=/; domain=.connecteam.com'
      window.cta.reportHit('actionHit', {
        label: ELIGIBLE_COOKIE_NAME,
        value: '',
      }).catch(console.error)
    }

    const query = new URLSearchParams(window.location.search)
    if (BLOCKED_MEDIUMS.includes(query.get('utm_medium')) && BLOCKED_SOURCES.includes(query.get('utm_source'))) {
      document.cookie = BLOCKED_COOKIE_NAME + '=1; max-age=31536000; path=/; domain=.connecteam.com'
      window.cta.reportHit('actionHit', {
        label: BLOCKED_COOKIE_NAME,
        value: '',
      }).catch(console.error)
    }

    const disabledPaths = [
        '/small-business-plan/',
        '/connecteam-experts/',
    ]

    // show cta
    if (
        !document.cookie.includes(BLOCKED_COOKIE_NAME)
        && document.cookie.includes(ELIGIBLE_COOKIE_NAME)
        && !disabledPaths.includes(window.location.pathname)
    ) {
      const siteNavigationContactUrl = '/contact/'
      const siteNavigationContactItem = $('.section-sitenavigation a:contains("Contact Sales")').eq(0)
      const siteNavigationDemoUrl = 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=company_menu&meeting_medium_cp=&meeting_content_cp='
      const siteNavigationDemoItem = $('.section-sitenavigation a:contains("Contact Support")').eq(0)

      siteNavigationContactItem.attr('href', siteNavigationContactUrl)
      siteNavigationContactItem.find('.label').text('Contact Us')
      siteNavigationDemoItem.attr('href', siteNavigationDemoUrl)
      siteNavigationDemoItem.find('.label').text('Book a Demo')

      const siteNavigationCta = $(`<li class="app-link secondary"><a href="https://connecteam.com/request-a-demo-form/?ref=site-navigation-header&meeting_source_cp=website&meeting_campaign_cp=navigation-cta&meeting_medium_cp=&meeting_content_cp=">Book a Demo</a></li>`)
      $('.section-sitenavigation .app-links').append(siteNavigationCta)
      $('[data-site-navigation]')[0].dataset.preventPassedHero = ''

      const twoupUrls = {
        '/operations/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=ops_main&meeting_medium_cp=&meeting_content_cp=',
        '/solutions/time-management/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=solution_time_management&meeting_medium_cp=&meeting_content_cp=',
        '/employee-time-clock-app/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=ops_tc&meeting_medium_cp=&meeting_content_cp=',
        '/employee-scheduling-app/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=ops_scheduling&meeting_medium_cp=&meeting_content_cp=',
        '/forms-checklist-app/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=ops_forms_checklist&meeting_medium_cp=&meeting_content_cp=',
        '/employee-communication-app/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=comms_main&meeting_medium_cp=&meeting_content_cp=',
        '/hr-people-management/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=hr_main&meeting_medium_cp=&meeting_content_cp=',
        '/solutions/employee-onboarding/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=solution_onboarding&meeting_medium_cp=&meeting_content_cp=',
        '/solutions/compliance/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=solution_compliance&meeting_medium_cp=&meeting_content_cp=',
        '/solutions/health-safety/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=solution_health_safety&meeting_medium_cp=&meeting_content_cp=',
        '/solutions/engagement/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=solution_engagement&meeting_medium_cp=&meeting_content_cp=',
        '/solutions/company-culture/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=solution_culture&meeting_medium_cp=&meeting_content_cp=',
        '/it-manager/':	'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=it_manager&meeting_medium_cp=&meeting_content_cp=',
        '/industries/construction-app/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=industries-construction&meeting_medium_cp=&meeting_content_cp=',
        '/industries/field-services/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=industries-field-services&meeting_medium_cp=&meeting_content_cp=',
        '/industries/food-beverage-app/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=industries-food-beverage&meeting_medium_cp=&meeting_content_cp=',
        '/industries/homecare-app/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=industries-homecare&meeting_medium_cp=&meeting_content_cp=',
        '/industries/cleaning-services-app/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=industries-cleaning&meeting_medium_cp=&meeting_content_cp=',
        '/industries/manufacturing-app/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=industries-manufacturing&meeting_medium_cp=&meeting_content_cp=',
        '/industries/retail-app/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=industries-retail&meeting_medium_cp=&meeting_content_cp=',
        '/solutions/productive-operations/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=solution-productive-operations&meeting_medium_cp=&meeting_content_cp=',
        '/operations-manager/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=solutions-operations-manager&meeting_medium_cp=&meeting_content_cp=',
        '/human-resources-manager/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=hr_manager&meeting_medium_cp=&meeting_content_cp=',
        '/internal-communication-manager/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=solutions-internal-communication-manager&meeting_medium_cp=&meeting_content_cp=',
        '/training-manager/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=solutions-training-manager&meeting_medium_cp=&meeting_content_cp=',
        '/task-management-app/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=ops-task-management&meeting_medium_cp=&meeting_content_cp=',
        '/employee-communication-app/updates/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=comms_updates&meeting_medium_cp=&meeting_content_cp=',
        '/employee-communication-app/employee-team-chat-app/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=comms-chat&meeting_medium_cp=&meeting_content_cp=',
        '/employee-communication-app/employee-directory/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=comms_directory&meeting_medium_cp=&meeting_content_cp=',
        '/employee-communication-app/surveys/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=comms_surveys&meeting_medium_cp=&meeting_content_cp=',
        '/employee-communication-app/knowledge-center/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=comms-kb&meeting_medium_cp=&meeting_content_cp=',
        '/employee-communication-app/events/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=comms-events&meeting_medium_cp=&meeting_content_cp=',
        '/industries/staffing-app/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=industries-staffing&meeting_medium_cp=&meeting_content_cp=',
        '/industries/hospitality-app/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=industries-hospitality&meeting_medium_cp=&meeting_content_cp=',
        '/industries/healthcare-app/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=industries-healthcare&meeting_medium_cp=&meeting_content_cp=',
        '/industries/car-wash/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=industries-carwash&meeting_medium_cp=&meeting_content_cp=',
        '/employee-intranet/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=employee-intranet&meeting_medium_cp=&meeting_content_cp=',
        '/integrations/gusto-integration/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=gusto-integration&meeting_medium_cp=&meeting_content_cp=',
        '/integrations/quickbooks-integration/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=quickbooks-integration&meeting_medium_cp=&meeting_content_cp=',
        '/integrations/xero-integration/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=xero-integration&meeting_medium_cp=&meeting_content_cp=',
        '/integrations/paychex-flex-integration/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=paychex-integration&meeting_medium_cp=&meeting_content_cp=',
        '/integrations/zapier-integration/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=zapier-integration&meeting_medium_cp=&meeting_content_cp=',
        '/integrations/myob-integration/': 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=myob-integration&meeting_medium_cp=&meeting_content_cp=',
        '/employee-communication-app/help-desk/':	'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=comms-help-desk&meeting_medium_cp=&meeting_content_cp=',
      }

      const homeUrl = 'https://connecteam.com/request-a-demo-form/?meeting_source_cp=website&meeting_campaign_cp=home-page&meeting_medium_cp=&meeting_content_cp='

      for (const [pathname, url] of Object.entries(twoupUrls)) {
        if (window.location.pathname === pathname) {
          const $demoCta = $(`<div class="link-wrapper"><a href="${url}" class="link button-bordered-blue" data-presentation="secondary" data-trailing-icon="none"><span>Book a demo</span></a></div>`)
          $('.section-twoup').eq(0).find('.links').append($demoCta)
          break
        }
      }

      if (window.location.pathname === '/') {
        const $demoCta = $(`<a class="button-bordered-blue" href="${homeUrl}"><span>Book a demo</span></a>`)
        $('.section-coverCentered').eq(0).find('.button-solid-blue.is-arrow').after($demoCta)
      }

      window.cta.reportHit('actionHit', {
        label: 'demo_cta_shown',
        value: '',
      }).catch(console.error)
    }
  }

  async function initCallCta () {
    const ELIGIBLE_REFERRERS = [
      'google.com',
      'bing.com',
    ]

    const ELIGIBLE_COOKIE_NAME = 'call_cta_eligible'
    const BLOCKED_COOKIE_NAME = 'call_cta_blocked'

    // set cookies
    if (ELIGIBLE_REFERRERS.some(referrer => document.referrer.includes(referrer)) || !document.referrer) {
      document.cookie = `${ELIGIBLE_COOKIE_NAME}=1; max-age=${60*60*24*30}; path=/; domain=.connecteam.com`
      window.cta.reportHit('actionHit', {
        label: ELIGIBLE_COOKIE_NAME,
        value: '',
      }).catch(console.error)

      // todo: remove
      console.log('set', ELIGIBLE_COOKIE_NAME)
    }

    const query = new URLSearchParams(window.location.search)
    if (query.get('utm_medium') !== null /* any utm_medium */) {
      document.cookie = `${BLOCKED_COOKIE_NAME}=1; max-age=${60*60*24*365}; path=/; domain=.connecteam.com`
      window.cta.reportHit('actionHit', {
        label: BLOCKED_COOKIE_NAME,
        value: '',
      }).catch(console.error)

      // todo: remove
      console.log('set', BLOCKED_COOKIE_NAME)
    }

    // show cta
    const paths = [
      '/',
      '/operations/',
      '/employee-communication-app/',
      '/hr-people-management/',
      '/employee-time-clock-app/',
      '/employee-scheduling-app/',
      '/forms-checklist-app/',
      '/task-management-app/',
      '/employee-communication-app/updates/',
      '/employee-communication-app/employee-team-chat-app/',
      '/employee-communication-app/employee-directory/',
      '/employee-communication-app/surveys/',
      '/employee-communication-app/knowledge-center/',
      '/employee-communication-app/events/',
      '/hr-people-management/employee-recognition-rewards/',
      '/employee-training-software/',
      '/hr-people-management/online-quiz-app/',
      '/hr-people-management/documents/',
      '/hr-people-management/timeline/',
      '/hr-people-management/pto/',
      '/solutions/time-management/',
      '/solutions/employee-onboarding/',
      '/solutions/compliance/',
      '/solutions/health-safety/',
      '/solutions/engagement/',
      '/solutions/company-culture/',
      '/employee-intranet/',
      '/operations-manager/',
      '/human-resources-manager/',
      '/it-manager/',
      '/internal-communication-manager/',
      '/training-manager/',
      '/industries/construction-app/',
      '/industries/cleaning-services-app/',
      '/industries/field-services/',
      '/industries/food-beverage-app/',
      '/industries/homecare-app/',
      '/industries/manufacturing-app/',
      '/industries/retail-app/',
      '/industries/car-wash/',
      '/industries/property-management-app/',
      '/industries/security-app/',
      '/industries/care-home-app/',
      '/industries/real-estate-app/',
      '/industries/staffing-app/',
      '/industries/plumbing-software/',
      '/industries/pest-control-app/',
      '/industries/lawn-care-business-app/',
      '/industries/hvac-app/',
      '/industries/hospitality-app/',
      '/industries/handyman-business-software/',
      '/industries/fitness-app/',
      '/industries/event-app/',
      '/industries/electrician-app/',
      '/industries/delivery-app/',
      '/industries/healthcare-app/',
      '/industries/call-center/',
      '/industries/education-app/',
      '/industries/transportation-app/',
      '/industries/logistics-dispatching-app/',
      '/industries/franchise/',
    ]

    const locales = [
      {
        country: 'US',
        from: 13,
        to: 21,
        tel: '+18333917697',
        number: '(+1) 833-391-7697',
      },
      {
        country: 'CA',
        from: 13,
        to: 21,
        tel: '+18333917697',
        number: '(+1) 833-391-7697',
      },
      {
        country: 'IL',
        from: 13,
        to: 21,
        tel: '+18333917697',
        number: '(+1) 833-391-7697',
      },
      {
        country: 'GB',
        from: 13,
        to: 21,
        tel: '+448000148190',
        number: '+44 80 0014 8190',
      },
    ]

    const isWithinTimeRange = (from, to) => {
      const now = new Date()

      const day = now.getUTCDay() // 0 (Sunday) to 6 (Saturday)
      const hours = now.getUTCHours() // 0 to 23

      const isWeekday = day >= 1 && day <= 5 // Monday to Friday
      const isWithinHours = hours >= from && hours <= to

      return isWeekday && isWithinHours
    }

    const isPayingCustomer = () => [
      'connecteam_free_small_business',
      'connecteam_yearly',
      'connecteam_monthly',
      'enterprise',
    ].includes(window.getUserPlanFromCookie())

    if (
        paths.includes(window.location.pathname)
        && !document.cookie.includes(BLOCKED_COOKIE_NAME)
        && document.cookie.includes(ELIGIBLE_COOKIE_NAME)
        && !isPayingCustomer()
    ) {
      const res = await fetch('https://api.country.is').catch(console.error)
      const data = await res.json().catch(console.error)
      const locale = locales.find(({ country }) => country === data?.country)

      if (locale && isWithinTimeRange(locale.from, locale.to)) {
        const $cta = document.createElement('a')
        $cta.classList.add('call-cta')
        $cta.href = `tel:${locale.tel}`
        $cta.innerHTML = `
<svg xmlns="http://www.w3.org/2000/svg" width="53" height="53" fill="none"><rect width="52" height="52" x=".58" y=".98" fill="#BBDEFF" rx="11.31"/><path fill="#2998FF" d="M21.37 24.57a16.52 16.52 0 0 0 8.06 7.89 1.18 1.18 0 0 0 1.25-.42c.4-.4.59-.6.79-.72a2.26 2.26 0 0 1 2.47 0c.2.13.4.33.79.72l.22.22c.6.6.9.9 1.06 1.23.33.64.33 1.4 0 2.04-.16.32-.46.62-1.06 1.22l-.18.18c-.6.6-.9.9-1.3 1.13-.46.25-1.16.44-1.68.44-.47 0-.79-.1-1.42-.28a21.54 21.54 0 0 1-9.38-5.51 21.54 21.54 0 0 1-5.51-9.37 4.84 4.84 0 0 1-.27-1.43c0-.52.18-1.22.43-1.67.23-.4.53-.7 1.13-1.3l.18-.19c.6-.6.9-.9 1.22-1.06.64-.33 1.4-.33 2.04 0 .33.16.63.46 1.23 1.06l.22.22c.4.4.6.6.72.8.49.75.49 1.71 0 2.46-.13.2-.32.4-.72.8-.13.12-.2.19-.25.26-.19.27-.26.66-.16.98.02.09.06.16.12.3Z"/><path stroke="#2998FF" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.13" d="M28.92 20.21a5.66 5.66 0 0 1 4.47 4.47m-4.47-9a10.18 10.18 0 0 1 9 8.99M24.58 29.1a16.52 16.52 0 0 1-3.22-4.54c-.06-.14-.1-.21-.12-.3a1.18 1.18 0 0 1 .41-1.24c.4-.4.6-.6.72-.8.49-.75.49-1.71 0-2.46-.13-.2-.32-.4-.72-.8l-.22-.22c-.6-.6-.9-.9-1.23-1.06a2.26 2.26 0 0 0-2.04 0c-.32.16-.62.46-1.22 1.06l-.18.18c-.6.6-.9.9-1.13 1.3a3.82 3.82 0 0 0-.43 1.68c0 .47.09.79.27 1.43a21.54 21.54 0 0 0 5.51 9.37c2.7 2.7 5.94 4.54 9.38 5.51.63.18.95.27 1.42.28.52 0 1.22-.19 1.67-.44.41-.23.71-.53 1.31-1.13l.18-.18c.6-.6.9-.9 1.06-1.22.33-.64.33-1.4 0-2.04a5.34 5.34 0 0 0-1.06-1.23l-.22-.22c-.4-.4-.6-.6-.8-.72a2.26 2.26 0 0 0-2.46 0c-.2.13-.4.33-.8.72-.12.13-.19.2-.26.25a1.18 1.18 0 0 1-1.28.04 16.52 16.52 0 0 1-4.54-3.22Z"/></svg>
<span class="label">Call sales</span>
<span class="num">${locale.number}</span>
`
        document.body.appendChild($cta)

        window.cta.reportHit('actionHit', {
          label: 'call_cta_shown',
          value: '',
        }).catch(console.error)
      }
    }
  }


  // Helpers Functions
    function getUrlParam(name, url) {
        if (!url) url = window.location.href;
        name = name.replace(/[\[\]]/g, "\\$&");
        var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
            results = regex.exec(url);
        if (!results) return null;
        if (!results[2]) return '';
        return decodeURIComponent(results[2].replace(/\+/g, " "));
    }

    function addParamsToUrl(href, params) {
        if (href && validURL(href) && params) {
            var url = new URL(href);
            for (var param in params) {
                if (Object.prototype.hasOwnProperty.call(params, param)) {
                    url.searchParams.set(param, params[param]);
                }
            }
            return url.href;
        }
        return href;
    }

    function validURL(str) {
        var pattern = new RegExp('^(https?:\\/\\/)?' + // protocol
            '((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|' + // domain name
            '((\\d{1,3}\\.){3}\\d{1,3}))' + // OR ip (v4) address
            '(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*' + // port and path
            '(\\?[;&a-z\\d%_.~+=-]*)?' + // query string
            '(\\#[-a-z\\d_]*)?$', 'i'); // fragment locator
        return !!pattern.test(str);
    }

    // https://github.com/landjonathan/js-utils/blob/master/dom/scrollHeight.mjs
    /**
     * Set a custom property on elements with their respective scroll heights
     * @description A child selector can be set, e.g. <code>data-scroll-height=".content"</code>
     * @param {string=} identifier
     * @param {string=} variable Custom property set on element
     * @param {string=} variableIdentifier
     * @param {boolean|'tallest'|'shortest'=} whichChild Use tallest or shortent child, if child set. False for first child.
     * @param {string=} whichChildSelector
     */
    const scrollHeight = ({
                              identifier = 'data-scroll-height',
                              variable = '--scroll-height',
                              variableIdentifier = 'data-scroll-height-variable',
                              whichChild = false,
                              whichChildSelector = 'data-scroll-height-which-child',
                          } = {}) => {

        const setScrollHeights = () => {
            document.querySelectorAll(`[${identifier}]`).forEach($el => {
                const childSelector = $el.getAttribute(identifier)
                const _whichChild = whichChild || $el.getAttribute(whichChildSelector) || false
                let height
                let $sources = false
                if (childSelector) {
                    if (_whichChild) {
                        $sources = $el.querySelectorAll(childSelector)
                        $sources.forEach($source => {
                            $source.style.setProperty('min-height', 0)
                        })
                        $sources.forEach($source => {
                            $source.style.setProperty('align-self', 'start')
                        })
                        const heights = [...$sources].map($source => $source.scrollHeight)
                        $sources.forEach($source => {
                            $source.style.removeProperty('min-height')
                        })
                        $sources.forEach($source => {
                            $source.style.removeProperty('align-self')
                        })
                        switch (_whichChild) {
                            case 'tallest':
                                height = Math.max(...heights);
                                break
                            case 'shortest':
                                height = Math.min(...heights);
                                break
                        }
                    } else {
                        const $element = $el.querySelector(childSelector)
                        if ($element)
                            height = $element.scrollHeight
                    }
                } else {
                    height = $el.scrollHeight
                }

                if (height) {
                    const customProperty = (variableIdentifier && $el.getAttribute(variableIdentifier)) ? `--${$el.getAttribute(variableIdentifier)}` : variable
                    $el.style.setProperty(customProperty, height + 'px')
                }
            })
        }
        // after fonts and images loaded
        window.addEventListener('load', () => {
            setScrollHeights()
        })
        window.addEventListener('resize', setScrollHeights, {passive: true})
    }
    scrollHeight();
});

/**
 * @param {string} text
 * */
window.copyToClipboard = function (text) {
  const contentType = 'text/plain'
  try {
    const blob = new Blob([text], { type: contentType })
    const data = [new ClipboardItem({ [blob.type]: blob })]
    navigator.clipboard.write(data)
        .then(() => {
          window.sendGAEvent('copy_to_clipboard')
        })
        .catch(console.error)
  } catch (e) {
    console.error(e)
  }
}

/**
 * @param {HTMLElement} $element
 * @param {string} ignoredSelector
 */
window.copyElementToClipboard = function ($element, {
  ignoredSelector = '[data-copy-ignore]',
} = {}) {
  $element.querySelectorAll(ignoredSelector).forEach($el => $el.style.display = 'none')
  try {
    const clipboardItem = new ClipboardItem({
      'text/plain': new Blob([$element.innerText], { type: 'text/plain' }),
      'text/html': new Blob([$element.outerHTML], { type: 'text/html' }),
    })
    navigator.clipboard.write([clipboardItem])
        .then(() => {
          window.sendGAEvent('copy_to_clipboard')
        })
        .catch(console.error)
        .finally(() => {
          $element.querySelectorAll(ignoredSelector).forEach($el => $el.style.removeProperty('display'))
        })
  } catch (e) {
    console.error(e)
    $element.querySelectorAll(ignoredSelector).forEach($el => $el.style.removeProperty('display'))
  }
}

window.getUserPlanFromCookie = function () {
  const cookie = document.cookie.split(';').find(c => c.includes('companyPlan='))
  if (!cookie) return null
  const value =  cookie.split('=')[1]
  if (!value) return null
  const json = JSON.parse(decodeURIComponent(value))
  if (!json) return null
  // noinspection UnnecessaryLocalVariableJS
  /**
   * @type { 'free' | 'demo' | 'trial' | 'enterprise' | 'churn' | 'freeze' | 'connecteam_monthly' | 'connecteam_yearly' | 'connecteam_free_small_business' }
   * @see https://github.com/Connecteam/mobimanagement/blob/52796c5a9c97600ba70cfa5bde3c928aaeac570d/app/scripts/infra/pricing/pricing.types.ts#L25
   */
  const plan = json.plan
  return plan
}

window.hash256hex = async string => {
  const utf8 = new TextEncoder().encode(string)
  const hashBuffer = await crypto.subtle.digest('SHA-256', utf8)
  const hashArray = Array.from(new Uint8Array(hashBuffer))
  return hashArray
      .map((bytes) => bytes.toString(16).padStart(2, '0'))
      .join('')
}