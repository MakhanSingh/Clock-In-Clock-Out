const $wrapper = document.querySelector('.blog-wrapper')
const $postContent = document.querySelector('.post-content')
const $innerNav = document.querySelector('.inner-nav')

/**
 * Check if an element is partially in the viewport
 * @param {HTMLElement} $element
 * @return {boolean}
 */
const isPartiallyInViewport = $element => {
  const { bottom, left, right, top } = $element.getBoundingClientRect();
  return (
      top < window.innerHeight
      && bottom > 0
      && left < window.innerWidth
      && right > 0
  );
}

/**
 * Get the review that is closest to the center of the screen
 * @return {HTMLElement|null}
 */
const getCenterOpenReview = () => {
  const /** @var {NodeListOf<HTMLElement>} */ $openReviews = $postContent.querySelectorAll('details[open], #connecteam-review')
  let $closestReview = null
  let minDistance = Infinity

  const $reviewsInViewport = Array.from($openReviews).filter(isPartiallyInViewport)
  if (!$reviewsInViewport.length) return null
  if ($reviewsInViewport.length === 1) return $reviewsInViewport[0]

  for (const $review of $reviewsInViewport) {
    const { top, height } = $review.getBoundingClientRect()
    const distance = Math.abs(top + height / 2 - window.innerHeight / 2)
    if (distance < minDistance) {
      minDistance = distance
      $closestReview = $review
    }
  }

  return $closestReview
}

function setInnerNavActiveLink () {
  if (getComputedStyle($innerNav).position !== 'fixed') {
    return
  }

  for (const $link of $innerNav.querySelectorAll(`[href*="#"]`)) {
    $link.classList.remove('active')
  }

  const $centerOpenReview = getCenterOpenReview()
  if ($centerOpenReview) {
    const id = $centerOpenReview.id
    const $link = $innerNav.querySelector(`[href="#${id}"]`)
    if ($link) {
      $link.classList.add('active')

      $link.scrollIntoView({ behavior: 'smooth', block: 'nearest' })
    }
  }
}

$wrapper.querySelectorAll('[href*="#"]').forEach($link => {
  const id = $link.hash.replace('#', '')
  const $target = document.getElementById(id)
  if (!$target || typeof $target.open === 'undefined') return

  $link.addEventListener('click', () => {
    $target.open = true
  })
})

const /** @var {HTMLElement} */ $showAfterElement = document.querySelector('.post-header')

window.addEventListener('scroll', () => {
  const { bottom, height } = $showAfterElement.getBoundingClientRect()
  const showAfterElementOut = bottom < window.innerHeight / 2 - height
  const showBeforeElementIn = $postContent.getBoundingClientRect().bottom > window.innerHeight
  const force = showAfterElementOut && showBeforeElementIn
  $wrapper.classList.toggle('in-main-scroll-area', force)

  setInnerNavActiveLink()
}, { passive: true })

const $connecteamReview = document.querySelector('[data-connecteam]')
$connecteamReview.querySelector('summary').addEventListener('click', () => {
  $connecteamReview.querySelector('details').setAttribute('open', 'open')
})

$postContent.querySelectorAll('summary').forEach($item => {
  $item.addEventListener('click', () => {
    const textContent = $item.textContent.trim()
    sendGAEvent('click_on_collapsable', {
      title_text: textContent,
    })
  })
})